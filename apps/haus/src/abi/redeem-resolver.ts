export const abi = [
  {
    inputs: [
      { internalType: 'contract IEAS', name: 'eas', type: 'address' },
      { internalType: 'address', name: '_paymentAddress', type: 'address' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'AccessDenied', type: 'error' },
  { inputs: [], name: 'AlreadyIssued', type: 'error' },
  { inputs: [], name: 'AlreadyPurchased', type: 'error' },
  { inputs: [], name: 'Duplicate', type: 'error' },
  { inputs: [], name: 'Insufficient', type: 'error' },
  { inputs: [], name: 'InsufficientValue', type: 'error' },
  { inputs: [], name: 'InvalidEAS', type: 'error' },
  { inputs: [], name: 'InvalidLength', type: 'error' },
  { inputs: [], name: 'NotPayable', type: 'error' },
  { inputs: [], name: 'OutOfBounds', type: 'error' },
  {
    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'address', name: 'account', type: 'address' }],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
          { internalType: 'bytes32', name: 'schema', type: 'bytes32' },
          { internalType: 'uint64', name: 'time', type: 'uint64' },
          { internalType: 'uint64', name: 'expirationTime', type: 'uint64' },
          { internalType: 'uint64', name: 'revocationTime', type: 'uint64' },
          { internalType: 'bytes32', name: 'refUID', type: 'bytes32' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'address', name: 'attester', type: 'address' },
          { internalType: 'bool', name: 'revocable', type: 'bool' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct Attestation',
        name: 'attestation',
        type: 'tuple',
      },
    ],
    name: 'attest',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'eventId', type: 'string' },
      { internalType: 'string', name: 'ticketType', type: 'string' },
    ],
    name: 'getPrice',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getTickets',
    outputs: [{ internalType: 'string[]', name: '', type: 'string[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPayable',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
          { internalType: 'bytes32', name: 'schema', type: 'bytes32' },
          { internalType: 'uint64', name: 'time', type: 'uint64' },
          { internalType: 'uint64', name: 'expirationTime', type: 'uint64' },
          { internalType: 'uint64', name: 'revocationTime', type: 'uint64' },
          { internalType: 'bytes32', name: 'refUID', type: 'bytes32' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'address', name: 'attester', type: 'address' },
          { internalType: 'bool', name: 'revocable', type: 'bool' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct Attestation[]',
        name: 'attestations',
        type: 'tuple[]',
      },
      { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
    ],
    name: 'multiAttest',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
          { internalType: 'bytes32', name: 'schema', type: 'bytes32' },
          { internalType: 'uint64', name: 'time', type: 'uint64' },
          { internalType: 'uint64', name: 'expirationTime', type: 'uint64' },
          { internalType: 'uint64', name: 'revocationTime', type: 'uint64' },
          { internalType: 'bytes32', name: 'refUID', type: 'bytes32' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'address', name: 'attester', type: 'address' },
          { internalType: 'bool', name: 'revocable', type: 'bool' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct Attestation[]',
        name: 'attestations',
        type: 'tuple[]',
      },
      { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
    ],
    name: 'multiRevoke',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'eventId', type: 'string' },
      { internalType: 'string', name: 'seat', type: 'string' },
      { internalType: 'string', name: 'ticketType', type: 'string' },
      { internalType: 'string', name: 'worldProof', type: 'string' },
      { internalType: 'string', name: 'attestationId', type: 'string' },
    ],
    name: 'purchase',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
          { internalType: 'bytes32', name: 'schema', type: 'bytes32' },
          { internalType: 'uint64', name: 'time', type: 'uint64' },
          { internalType: 'uint64', name: 'expirationTime', type: 'uint64' },
          { internalType: 'uint64', name: 'revocationTime', type: 'uint64' },
          { internalType: 'bytes32', name: 'refUID', type: 'bytes32' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'address', name: 'attester', type: 'address' },
          { internalType: 'bool', name: 'revocable', type: 'bool' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct Attestation',
        name: 'attestation',
        type: 'tuple',
      },
    ],
    name: 'revoke',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'string', name: 'eventId', type: 'string' },
      { internalType: 'string', name: 'ticketType', type: 'string' },
      { internalType: 'uint256', name: 'price', type: 'uint256' },
    ],
    name: 'setPrice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes', name: 'data', type: 'bytes' },
      { internalType: 'uint256', name: 'start', type: 'uint256' },
    ],
    name: 'toBytes32',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'version',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  { stateMutability: 'payable', type: 'receive' },
]
